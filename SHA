import java.*;
import java.io.BufferedReader;
import java.io.FileReader;
import java.io.IOException;
import java.security.MessageDigest;
import java.security.NoSuchAlgorithmException;
import java.util.Formatter;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.UnsupportedEncodingException;
public class sha
{public static void main(String ags[])
    {try (BufferedReader br = new BufferedReader(new FileReader("pw.txt"))) {        //reads txt file (pw.txt)
    String line;
    while ((line = br.readLine()) != null) {
      if(encryptPassword(line).equals("cd8d31d50b64dbb14d2768177ca6dae17b5b87af"))  //compair to this hash
         {System.out.println(line);
             
         }
    }
     }
catch (FileNotFoundException e)
  {System.out.println("file not found");
   }
catch(IOException e){}
    }    
    private static String encryptPassword(String password)
       {
    String sha1 = "";
    String hash = "cd8d31d50b64dbb14d2768177ca6dae17b5b87af";
    try
    {
        MessageDigest crypt = MessageDigest.getInstance("SHA-1");       //sha-1
        crypt.reset();
        crypt.update(password.getBytes("UTF-8"));
        sha1 = byteToHex(crypt.digest());
    }
    catch(NoSuchAlgorithmException e)
    {
        e.printStackTrace();
    }
catch(UnsupportedEncodingException e){}

if(sha1 == hash)
         {System.out.println(sha1);}
    return sha1;
}

private static String byteToHex(final byte[] hash)          //converts to hex
{
    Formatter formatter = new Formatter();
    for (byte b : hash)
    {
        formatter.format("%02x", b);
    }
    String result = formatter.toString();
    formatter.close();
    return result;
}
    }

